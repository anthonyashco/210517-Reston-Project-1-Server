begin;

create schema expense;

create table expense.user (
	id int primary key generated by default as identity,
	email varchar(200) unique not null,
	pass_hash varchar(200) not null,
	pass_salt varchar(200) not null,
	first_name varchar(50) not null,
	last_name varchar(200) not null,
	status varchar(50) not null
		check ((status = 'employee')
		or (status = 'manager')
		or (status = 'closed'))
);

create type expense.detail_entry as (
	author int,
	entry varchar(1000),
	post_time timestamptz
);

create table expense.request (
	id int primary key generated by default as identity,
	employee_id int not null,
	request_amount numeric not null
		check (request_amount > 0),
	request_details expense.detail_entry[],
	manager_id int default null,
	decision boolean default null,
	transaction_time timestamptz default current_timestamp,
	decision_time timestamptz default null,
	foreign key (employee_id) references expense.user(id),
	foreign key (manager_id) references expense.user(id)
);

create table expense.file (
	id int primary key generated by default as identity,
	employee_id int not null,
	request_id int not null,
	filename varchar(200) not null,
	ext varchar(50) not null,
	uploaded bytea not null,
	upload_time timestamptz default current_timestamp,
	foreign key (employee_id) references expense.user(id),
	foreign key (request_id) references expense.request(id)
);

commit;
